Make process_out and process_state do dynamic allocation of arrays
after reading size information from the file.

Change naming of state_XXXX.d to include sedi/brown/whatever

Golovin exact truncates at r = 3.2E-5

Rename out_XXXX_mass_avg.d to out_XXXX_vol_avg.d

Rename read_state to read_state_hybrid and also write_state.

Remove debug code in cond_growth_rate_func()

Replace pi with const%pi

Remove old style parameter declarations
Reformat parameter description comments and remove double spaces

Are we outputting integer number or number density? Which should it
be? Fix this.

Rename run_sedi_fix_hybrid to run_sedi_mc and same with output files.

Add test code to check total volume and total volume per species at
start and end of the run.

make deps isn't happening automatically

Fix mc_exact to also use the t_print = 0d0 convention to not print.

Stop using magic file number 30 for the output file.

Add a "make test" to run everything and compare the output files of
various things.

Rename t_print to t_output

Change endif/enddo to end if/end do

Make sure all functions have a description at the top of them

Add restart arguments to mc_fix_hybrid to get it to restart

Add do_coagulation and do_condensation parameters to mc_fix_hybrid to
tell it whether to do each process.

Remove dT/dt from env and pass mc_fix_hybrid a list of times and
temps, so that it can do linear interpolation to set the
temperature. Write a function in util.f to actually do the linear
interpolation.

Rename bin_r, bin_v, bin_g, bin_n to make it clear that bin_r/bin_v
are the independent variables, while bin_g/bin_n are the dependent
variables.

deps: should be changed to Makefile.deps: in Makefile

rho_a should be shifted from constants to environ
check whether atm should also shift from constants to environ

clean up the whole particle_vol_hybrid(), particle_vol(),
particle_vol_base(), particle_volume() thing

also output bin_v in state

-----------------------------------------------------------------------------

Add adaptive timestepping for the condensation ODE solver.

Add implicit timestepping for the condensation ODE solver.

The initialization routines in init_dist.f are assuming
logarithmically spaced bins, irrespective of what bin_r and bin_v
actually contain. dlnr is the width of a bin in the logarithmic scale,
and we just multiply this by the density to get the number per bin. We
should instead multiply the density by ln(bin_right_edge) -
ln(bin_left_edge) or similar. In general, we should stop passing dlnr
around, as it should be recalculable from bin_r for each bin.

use HDF or CDF or something to store state
