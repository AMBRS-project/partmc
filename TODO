
Before release of 2.0.0:

Fix MOSAIC release version date, and make release.

Remove aero_weight%ref_radius from output files, set to 1 when reading
from netcdf file.

Remove molec_weight from gas_data. Or rename to "molar mass"? And fix
them up?

H2SO4 98.086e-3
HNO3  63.01e-3
HCl   36.46e-3
NH3   17.031e-3
NO		  18d-3 30.0061
NO2		  18d-3 46.0055
NO3		  18d-3 62.0049
N2O5		  18d-3
HONO		  18d-3
HNO4		  18d-3
O3		  18d-3
O1D		  18d-3
O3P		  18d-3
OH		  18d-3
HO2		  18d-3
H2O2		  18d-3
CO		  18d-3
SO2		  18d-3
CH4		  18d-3
C2H6		  18d-3
CH3O2		  18d-3
ETHP		  18d-3
HCHO		  18d-3
CH3OH		  18d-3
ANOL		  18d-3
CH3OOH		  18d-3
ETHOOH		  18d-3
ALD2		  18d-3
HCOOH		  18d-3
RCOOH		  18d-3
C2O3		  18d-3
PAN		  18d-3
ARO1		  18d-3
ARO2		  18d-3
ALK1		  18d-3
OLE1		  18d-3
API1		  18d-3
API2		  18d-3
LIM1		  18d-3
LIM2		  18d-3
PAR		  18d-3
AONE		  18d-3
MGLY		  18d-3
ETH		  18d-3
OLET		  18d-3
OLEI		  18d-3
TOL		  18d-3
XYL		  18d-3
CRES		  18d-3
TO2		  18d-3
CRO		  18d-3
OPEN		  18d-3
ONIT		  18d-3
ROOH		  18d-3
RO2		  18d-3
ANO2		  18d-3
NAP		  18d-3
XO2		  18d-3
XPAR		  18d-3
ISOP		  18d-3
ISOPRD		  18d-3
ISOPP		  18d-3
ISOPN		  18d-3
ISOPO2		  18d-3
API		  18d-3
LIM		  18d-3
DMS		  18d-3
MSA		  18d-3
DMSO		  18d-3
DMSO2		  18d-3
CH3SO2H		  18d-3
CH3SCH2OO	  18d-3
CH3SO2		  18d-3
CH3SO3		  18d-3
CH3SO2OO	  18d-3
CH3SO2CH2OO	  18d-3
SULFHOX		  18d-3

######################################################################

Time
####

Clean up time handling. At the moment we have times from midnight, times
from start of run, times from time of restarted run, time within
condensation timestep, etc.

Change times in the env_data arrays to be seconds since midnight on
start_day, so we can easily change start_time without needing to
rewrite all the emit/height/etc data. It makes more sense for these to
be absolute real times, rather than relative to start of
simulation. Would also help with restarted simulations.

Add env%day_of_year (days since jan 1) and env%time_of_day (secs since
midnight) and shift info on start day, start time, etc to
env_data. Change mosaic_timestep() to just read time/day info out of
env directly. Update this info in env_data_update_state(). Should
probably store full date/time info, with timezone as +-HH:MM, etc.

Add separate del_t for mosaic, coag, and cond. Check on input that
t_output, etc are multiples of del_t so that the n_time header
information is actually correct.

######################################################################

MPI
###

All mpi_recv calls should use MPI_TAG_ANY and MPI_SOURCE_ANY but then
assert() that they are correct, so that we die rather than
deadlocking.

Change gas mixing to be by diffusion, rather than allreduce, also env.

Switch to using mpi structures rather than pack/unpack?

In aero_state_mix(), if expected number of particles to send to each
other processor is less than one, switch to a
"send-individual-particles" mode, which should be more efficient.

######################################################################

Build
#####

Sometimes cmake seems to rebuild even if no source files have changed
at all? Maybe has to do with the fact that the module files are being
put into the build/ directory?

######################################################################

Add entrainment switch as a function of time.

Implement a better poisson distribution generator. We should probably
generate a poisson sample per-bin, rather than doing a total sample
and then using a slow sampling to pick samples one-by-one.

Fix calling convention for aerosol_optical from mosaic.f90. Do we do
it every timestep, or just when needed, or what? What about
coagulation? Does this come in the right order? We should really be
able to do aerosol_optical as a post-processing step.

Change numeric_average.f90 to be numeric_reduce.f90 with option
"mean", "stddev", "min", "max", "median", "perc_rank" (percentile
rank).

Change sample_disc_pdf() and sample_cts_pdf() to use cumulative
distributions.

Don't store paricles as ragged array, but just as a flat list. For
coagulation, pre-compute the bin structures as needed on every
timestep, which we have to do if we are using chemistry or
condensation anyway.

Store all events (particle loss, creation, coagulation, etc) in the
output file, to allow detailed post-processing. Record full
information for each event, including the complete state of all
involved particles (e.g., before and after coagulation states).

Add new run-mode to make an output directory, copy input files into
it, etc. Not so easy, given that fortran has no mkdir. We could call
the C mkdir() directly, or via our own C code (probably easier to
match mode_t types, etc), but requires Fortran 2003.

Change "rate" line in gas_profile/aero_profile to be "scaling" (so it
makes sense for background as well), or just delete it. Will need to
add a dilution rate profile somewhere --- better anyway to unify it.

Separate out numerical parameters into
run_part_opt/run_sect_opt/run_exact_opt and scenario parameters into
another structure (to replace env_data --- maybe call it
scenario_t). Add spec_file_read_run_part_opt() etc to input the
numerical parameters.
