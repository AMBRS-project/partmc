
Parallel options:
    parallel yes/no -- active following options
    output_type: per-processor writes to local NetCDF files,
 	         centralized writes to per-processor NetCDF files,
 		 centralized write to a single NetCDF file
 		 (averaged env_state, gas_state, all particles)
    average_env: average the environment each timestep
    average_gas: average the gas each timestep
    aero_mix_rate: 0 to turn off aero mixing

Use only one style of quotes: '' or "".

Add --std=f90 or something to make sure we aren't using GNU
extensions.

Change cpu_time(t_wall_now) to actually get wall_time, not cpu_time.

All mpi_recv calls should use MPI_TAG_ANY and MPI_SOURCE_ANY but then
assert() that they are correct, so that we die rather than
deadlocking.

Shift rand stuff from util.f90 to rand.f90.

Add run_guid to netcdf output files and have extract_* programs check
to make sure they are processing everything from a single run.

Rename output_state_netcdf() to output_state().

Provide *_allocate() and *_deallocate() subroutines for all
structures, even those that don't need them. Maybe just call *_zero()
for allocation? In any case, compiler optimization should kill these
off.

Add flag to numeric_diff to compute errors row-wise, column-wise, or
matrix-wise.

Add entrainment switch.

Change gas conc from ppb to mole proportion.

Add implicit, adaptive timestepping for the condensation ODE solver.

Make array names plural.

Properly use kind() rather than real*8.

Implement a better poisson distribution generator. We should probably
generate a poisson sample per-bin, rather than doing a total sample
and then using a slow sampling to pick samples one-by-one.

Add separate del_t for mosaic, coag, and cond. Check on input that
t_output, etc are multiples of del_t so that the n_time header
information is actually correct.

Use mpi_sizeof() to get the sizes for reals, logicals, etc. There are
also functions called MPI_Sizeof1DR8 for a 1D array of real*8,
etc. What about 2D arrays, is it correct to treat them as 1D as we do
at present with mpi_pack?

Use mpi_sizeof() and mpi_type_match_size() rather than hardcoding. See
http://www.mpi-forum.org/docs/mpi21-report-bw/node347.htm

Change gas mixing to be by diffusion, rather than allreduce, also env,
but first fix weighting so it is not all equal, but weighted by
particle numbers and comp vols or something?

Add env%day_of_year (days since jan 1) and env%time_of_day (secs since
midnight) and shift info on start day, start time, etc to
env_data. Change mosaic_timestep() to just read time/day info out of
env directly. Update this info in env_data_update_state().

Add H2O as a gas species and just track it as a regular gas, getting
rid of relative humidity in env. add a relative_humidity(env,
gas_data, gas_state) function.

Fix calling convention for aerosol_optical from mosaic.f90. Do we do
it every timestep, or just when needed, or what? What about
coagulation? Does this come in the right order?

Implement parallel version with coagulation done centrally.

Sometimes cmake seems to rebuild even if no source files have changed
at all?

Change bins to have r_min, r_max as edges, not centers?

Document interpolation strategies. Emissions and background all use
piecewise constant: for data d_1, d_2, ..., d_n at times t_1, t_2,
..., t_n then at time t we use d_1 if t < t_1, d_n if t > t_n, and d_i
if t_i <= t < t_{i+1} for some i. Temperature and mixing-layer height
are linearly interpolated: we use d_1 if t < t_1, d_n if t > t_n, and
(1 - a) d_i + a d_{i+1} if t_i <= t < t_{i+1} for some i, where a = (t
- t_i) / (t_{i+1} - t_i).

Convert more pmc_nc_check() calls to pmc_nc_check_msg(), as in
pmc_nc_open_read().

Change gas_state_add(), gas_state_sub(), gas_state_scale(), etc, to
just be gas_state_axpy(), and similarly for other structures.

Things like spec_read_aero_data_filename() should take the filename,
not the file containing the line containing the filename.

Change spec_read_aero_data to spec_read_aero_data_filename and pass in
the name, and similar spec_read_*.

soln_* shouldn't need to be passed mean_radius, etc, as they can read
this out of aero_dist_init if they need it.

soln_* should check that aero_dist_init and emissions, etc, are
correct for the given analytic solution.

Make sure every structure has a struct_zero() and that it's called
from struct_alloc_size() and struct_alloc().

Rename spec_read_struct() to struct_read_from_spec().

Use wiki page to update CMakeLists.txt for Fortran:
http://www.cmake.org/Wiki/CMakeForFortranExample
