#!/usr/bin/env python
# Copyright (C) 2007 Matthew West
# Licensed under the GNU General Public License version 2 or (at your
# option) any later version. See the file COPYING for details.

import os, sys, re

def print_usage():
    print """plot_gas_history <datafile_gas.d> <species...>

Plots the time history of the given species.

<sepecies> is of list of species numbers or names.
"""

def process_args():
    if len(sys.argv) < 3:
	print_usage()
	sys.exit(1)
    data_filename = sys.argv[1]
    species = sys.argv[2:]
    return (data_filename, species)

def get_species_names(data_filename):
    f = open(data_filename)
    if not f:
	print "ERROR: unable to open %s" % data_filename
	sys.exit(1)
    f.readline()
    header = f.readline()
    f.close()
    if header[0] != '#':
	print "ERROR: header does not start with #: %s" % header
	sys.exit(1)
    cols = header[1:].split()
    species = cols[1:]
    return species

def normalize_species(species, species_names):
    species_nums = []
    error = False
    n = 0
    for s in species:
	try:
	    n = int(s)
	    if (n < 1) or (n > len(species_names)):
		error = True
		print "ERROR: species number out of range: %d" % n
	except ValueError:
	    found = False
	    for i in range(len(species_names)):
		if s.lower() == species_names[i].lower():
		    found = True
		    n = i + 1
		    break
	    if not found:
		error = True
		print "ERROR: unknown species: %s" % s
	species_nums.append(n)
    if error:
	sys.exit(1)
    species_nums.sort()
    return species_nums

def print_species_table(species_nums, species_names):
    col = 0
    for i in species_nums:
	print ("%5d %-15s" % (i, species_names[i-1])),
	col += 1
	if col == 3:
	    print
	    col = 0
    if col != 0:
	print

def plot_commands(f, data_filename, species_nums, species_names):
    f.write('set xlabel "time (hr)"\n')
    f.write('set ylabel "gas concentration (ppb)\n')
    f.write('set title "gas time history"\n')
    first_time = True
    for i in species_nums:
	if first_time:
	    plot = "plot"
	    first_time = False
	else:
	    plot = "replot"
	f.write(plot + ' "%s" using ($1/3600):%d title "%s" with lines\n'
		% (data_filename, i + 1, species_names[i - 1]))

def main():
    (data_filename, species) = process_args()
    species_names = get_species_names(data_filename)
    print "Available species:"
    print_species_table([i+1 for i in range(len(species_names))], species_names)
    species_nums = normalize_species(species, species_names)
    print "Selected species:"
    print_species_table(species_nums, species_names)
    f = os.popen('gnuplot -persist', 'w')
    plot_commands(f, data_filename, species_nums, species_names)
    f.flush()
    
if __name__ == "__main__":
    main()
