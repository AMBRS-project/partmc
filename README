
PartMC - Particle-resolved Monte Carlo code for coagulation and condensation

Version 1.0.0
Released 2007-02-20

http://tableau.stanford.edu/~mwest/group/PartMC
http://carrot.msrc.sunysb.edu/~nicole/research/montecarlo/

Copyright (C) 2005-2007 Nicole Riemer, Matthew West
Portions copyright (C) Andreas Bott
Distributed under the GPL (see the file COPYING)


INSTALLATION
------------

By default the Makefile will use gfortran (tested on Linux with gcc
4.1.1 and OS X with gcc 4.2.0).

To use Portland Group compilers run with "make FC=pgf95" (tested with
pgf95 6.0-8 on x86-64 Linux).

The Makefile requires GNU make (tested with versions 3.79.1 and 3.80).

makedeps.py requires Python (tested with version 2.4.2).


USAGE
-----

The main partmc command reads .spec files and does the run specified
therein. Either Monte Carlo runs, sectional code runs, or exact
solutions can be generated. A run produces binned summary data in a
file called out_*.d which can be processed with process_out to
generate simple files that gnuplot can plot. Monte Carlo runs can also
output the full internal state, which can then be processed with
process_state to

There are a number of examples provided, which can be run by the
test_*.sh scripts.


CODING CONVENTIONS
------------------

The code is mainly Fortran 90, with a few parts still clearly showing
their Fortran 77 heritage.

The auto-generation of module dependencies relies on a particular
naming convention. The module names must be the same as the name of
the containing file, but prefixed with "mod_". Thus the module
mod_condensation is contained in the file condensation.f. The
dependencies are autogenerated by the makedeps.py Python program,
which is called automatically by the main Makefile.


CHANGELOG
---------

1.0.0 - 2007-02-20
  * First release, including hierarchical coagulation and full water
    condensation.
